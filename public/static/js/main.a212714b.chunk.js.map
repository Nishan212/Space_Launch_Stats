{"version":3,"sources":["logo.png","components/LaunchItem.js","components/MissionKey.js","components/Launches.js","components/Launch.js","App.js","reportWebVitals.js","index.js"],"names":["LaunchItem","launch","flight_number","mission_name","launch_date_local","launch_success","className","classNames","format","to","MissionKey","LAUNCHES_QUERY","gql","Launches","query","loading","error","data","console","log","launches","map","Component","LAUNCH_QUERY","Launch","this","props","match","params","parseInt","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","client","ApolloClient","uri","App","src","logo","alt","style","width","display","margin","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a212714b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.91169fa6.png\";","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport Moment from \"react-moment\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function LaunchItem({\r\n\tlaunch: { flight_number, mission_name, launch_date_local, launch_success },\r\n}) {\r\n\treturn (\r\n\t\t<div className=\"card card-body mb-3\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-9\">\r\n\t\t\t\t\t<h4>\r\n\t\t\t\t\t\tMission:{\" \"}\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclassName={classNames({\r\n\t\t\t\t\t\t\t\t\"text-success\": launch_success,\r\n\t\t\t\t\t\t\t\t\"text-danger\": !launch_success,\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{mission_name}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</h4>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tDate: <Moment format=\"YYYY-MM-DD HH:mm\">{launch_date_local}</Moment>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\">\r\n\t\t\t\t\t\tLaunch Details\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function MissionKey() {\r\n\treturn (\r\n\t\t<div className=\"my-3\">\r\n\t\t\t<p>\r\n\t\t\t\t<span className=\"px-3 mr-2 bg-success\" /> = Success\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<span className=\"px-3 mr-2 bg-danger\" /> = Fail\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\nimport LaunchItem from \"./LaunchItem\";\r\nimport MissionKey from \"./MissionKey\";\r\n\r\nconst LAUNCHES_QUERY = gql`\r\n\tquery LaunchesQuery {\r\n\t\tlaunches {\r\n\t\t\tflight_number\r\n\t\t\tmission_name\r\n\t\t\tlaunch_date_local\r\n\t\t\tlaunch_success\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport class Launches extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<h1 className=\"display-4 my-3\">Launches</h1>\r\n\t\t\t\t<MissionKey />\r\n\t\t\t\t<Query query={LAUNCHES_QUERY}>\r\n\t\t\t\t\t{({ loading, error, data }) => {\r\n\t\t\t\t\t\tif (loading) return <h4>Loading...</h4>;\r\n\t\t\t\t\t\tif (error) console.log(error);\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t{data.launches.map((launch) => (\r\n\t\t\t\t\t\t\t\t\t<LaunchItem key={launch.flight_number} launch={launch} />\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}}\r\n\t\t\t\t</Query>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Launches;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\nconst LAUNCH_QUERY = gql`\r\n\tquery LaunchQuery($flight_number: Int!) {\r\n\t\tlaunch(flight_number: $flight_number) {\r\n\t\t\tflight_number\r\n\t\t\tmission_name\r\n\t\t\tlaunch_year\r\n\t\t\tlaunch_date_local\r\n\t\t\tlaunch_success\r\n\t\t\trocket {\r\n\t\t\t\trocket_id\r\n\t\t\t\trocket_name\r\n\t\t\t\trocket_type\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport class Launch extends Component {\r\n\trender() {\r\n\t\tlet { flight_number } = this.props.match.params;\r\n\t\tflight_number = parseInt(flight_number);\r\n\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<Query query={LAUNCH_QUERY} variables={{ flight_number }}>\r\n\t\t\t\t\t{({ loading, error, data }) => {\r\n\t\t\t\t\t\tif (loading) return <h4>Loading...</h4>;\r\n\t\t\t\t\t\tif (error) console.log(error);\r\n\r\n\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\tmission_name,\r\n\t\t\t\t\t\t\tflight_number,\r\n\t\t\t\t\t\t\tlaunch_year,\r\n\t\t\t\t\t\t\tlaunch_success,\r\n\t\t\t\t\t\t\trocket: { rocket_id, rocket_name, rocket_type },\r\n\t\t\t\t\t\t} = data.launch;\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h1 className=\"display-4 my-3\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"text-dark\">Mission:</span> {mission_name}\r\n\t\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t\t\t<h4 className=\"mb-3\">Launch Details</h4>\r\n\t\t\t\t\t\t\t\t<ul className=\"list-group\">\r\n\t\t\t\t\t\t\t\t\t<li className=\"list-group-item\">\r\n\t\t\t\t\t\t\t\t\t\tFlight Number: {flight_number}\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li className=\"list-group-item\">\r\n\t\t\t\t\t\t\t\t\t\tLaunch Year: {launch_year}\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li className=\"list-group-item\">\r\n\t\t\t\t\t\t\t\t\t\tLaunch Successful:{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classNames({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"text-success\": launch_success,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"text-danger\": !launch_success,\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{launch_success ? \"Yes\" : \"No\"}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t\t\t\t\t<h4 className=\"my-3\">Rocket Details</h4>\r\n\t\t\t\t\t\t\t\t<ul className=\"list-group\">\r\n\t\t\t\t\t\t\t\t\t<li className=\"list-group-item\">Rocket ID: {rocket_id}</li>\r\n\t\t\t\t\t\t\t\t\t<li className=\"list-group-item\">\r\n\t\t\t\t\t\t\t\t\t\tRocket Name: {rocket_name}\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li className=\"list-group-item\">\r\n\t\t\t\t\t\t\t\t\t\tRocket Type: {rocket_type}\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\r\n\t\t\t\t\t\t\t\t<Link to=\"/\" className=\"btn btn-secondary\">\r\n\t\t\t\t\t\t\t\t\tBack\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}}\r\n\t\t\t\t</Query>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Launch;\r\n","import \"./App.css\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport logo from \"./logo.png\";\nimport { Component } from \"react\";\nimport Launches from \"./components/Launches\";\nimport Launch from \"./components/Launch\";\n\nconst client = new ApolloClient({\n\turi: \"/graphql\",\n});\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<ApolloProvider client={client}>\n\t\t\t\t<Router>\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={logo}\n\t\t\t\t\t\t\talt=\"SpaceX\"\n\t\t\t\t\t\t\tstyle={{ width: 300, display: \"block\", margin: \"auto\" }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route exact path=\"/\" component={Launches} />\n\t\t\t\t\t\t<Route exact path=\"/launch/:flight_number\" component={Launch} />\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</ApolloProvider>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}